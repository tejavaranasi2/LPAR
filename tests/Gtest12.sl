(set-logic NIA)
(declare-var x0 Int)
(assume ( or ( and ( and (<= ( - 10 ) x0) (>= ( - 5 ) x0) )  )( and ( and (<= ( - 5 ) x0) (>= 0 x0) )  )( and ( and (<= ( - 25 ) x0) (>= ( - 23 ) x0) )  )( and ( and (<= ( - 22 ) x0) (>= ( - 20 ) x0) )  )( and ( and (<= 5 x0) (>= 10 x0) )  )( and ( and (<= 10 x0) (>= 11 x0) )  )( and ( and (<= ( - 27 ) x0) (>= ( - 25 ) x0) )  )( and ( and (<= ( - 29 ) x0) (>= ( - 28 ) x0) )  )( and ( and (<= 0 x0) (>= 5 x0) )  )( and ( and (<= ( - 1 ) x0) (>= 0 x0) )  )( and ( and (<= 11 x0) (>= 12 x0) )  )( and ( and (<= ( - 2 ) x0) (>= ( - 1 ) x0) )  )( and ( and (<= 14 x0) (>= 15 x0) )  )( and ( and (<= ( - 6 ) x0) (>= ( - 5 ) x0) )  )( and ( and (<= ( - 4 ) x0) (>= ( - 3 ) x0) )  )( and ( and (<= ( - 7 ) x0) (>= ( - 6 ) x0) )  )( and ( and (<= 13 x0) (>= 14 x0) )  )( and ( and (<= ( - 5 ) x0) (>= ( - 4 ) x0) )  )( and ( and (<= 10 x0) (>= 15 x0) )  )( and ( and (<= ( - 10 ) x0) (>= ( - 8 ) x0) )  )( and ( and (<= ( - 20 ) x0) (>= ( - 15 ) x0) )  )( and ( and (<= 15 x0) (>= 17 x0) )  )( and ( and (<= 11 x0) (>= 11 x0) )  )( and ( and (<= 15 x0) (>= 16 x0) )  )( and ( and (<= ( - 7 ) x0) (>= ( - 5 ) x0) )  )( and ( and (<= ( - 5 ) x0) (>= ( - 3 ) x0) )  )( and ( and (<= ( - 24 ) x0) (>= ( - 24 ) x0) )  )( and ( and (<= ( - 23 ) x0) (>= ( - 23 ) x0) )  )( and ( and (<= ( - 25 ) x0) (>= ( - 25 ) x0) )  )( and ( and (<= ( - 2 ) x0) (>= 0 x0) )  )( and ( and (<= ( - 15 ) x0) (>= ( - 10 ) x0) )  )( and ( and (<= ( - 29 ) x0) (>= ( - 29 ) x0) )  )( and ( and (<= ( - 24 ) x0) (>= ( - 24 ) x0) )  )( and ( and (<= ( - 22 ) x0) (>= ( - 20 ) x0) )  )( and ( and (<= ( - 29 ) x0) (>= ( - 29 ) x0) )  )( and ( and (<= ( - 25 ) x0) (>= ( - 23 ) x0) )  )( and ( and (<= ( - 20 ) x0) (>= ( - 20 ) x0) )  )( and ( and (<= 5 x0) (>= 7 x0) )  )( and ( and (<= 0 x0) (>= 2 x0) )  )( and ( and (<= 0 x0) (>= 0 x0) )  )( and ( and (<= 3 x0) (>= 5 x0) )  )( and ( and (<= 12 x0) (>= 12 x0) )  )( and ( and (<= 8 x0) (>= 10 x0) )  )( and ( and (<= ( - 27 ) x0) (>= ( - 25 ) x0) )  )( and ( and (<= ( - 1 ) x0) (>= ( - 1 ) x0) )  )( and ( and (<= ( - 21 ) x0) (>= ( - 21 ) x0) )  )( and ( and (<= 16 x0) (>= 16 x0) )  )( and ( and (<= 14 x0) (>= 14 x0) )  )( and ( and (<= ( - 6 ) x0) (>= ( - 6 ) x0) )  )( and ( and (<= ( - 21 ) x0) (>= ( - 20 ) x0) )  )( and ( and (<= ( - 2 ) x0) (>= ( - 2 ) x0) )  )( and ( and (<= ( - 1 ) x0) (>= ( - 1 ) x0) )  )( and ( and (<= ( - 6 ) x0) (>= ( - 6 ) x0) )  )( and ( and (<= ( - 4 ) x0) (>= ( - 4 ) x0) )  )( and ( and (<= ( - 3 ) x0) (>= ( - 3 ) x0) )  )( and ( and (<= ( - 7 ) x0) (>= ( - 7 ) x0) )  )( and ( and (<= 15 x0) (>= 15 x0) )  )( and ( and (<= ( - 4 ) x0) (>= ( - 4 ) x0) )  )( and ( and (<= ( - 21 ) x0) (>= ( - 21 ) x0) )  )( and ( and (<= ( - 29 ) x0) (>= ( - 28 ) x0) )  )( and ( and (<= ( - 5 ) x0) (>= ( - 5 ) x0) )  )( and ( and (<= ( - 22 ) x0) (>= ( - 22 ) x0) )  )( and ( and (<= ( - 5 ) x0) (>= ( - 5 ) x0) )  )( and ( and (<= 18 x0) (>= 19 x0) )  )( and ( and (<= 15 x0) (>= 15 x0) )  )( and ( and (<= 14 x0) (>= 14 x0) )  )( and ( and (<= 16 x0) (>= 16 x0) )  )( and ( and (<= 13 x0) (>= 13 x0) )  )( and ( and (<= ( - 28 ) x0) (>= ( - 28 ) x0) )  )( and ( and (<= 16 x0) (>= 16 x0) )  )( and ( and (<= ( - 10 ) x0) (>= ( - 10 ) x0) )  )( and ( and (<= 17 x0) (>= 17 x0) )  )( and ( and (<= ( - 8 ) x0) (>= ( - 8 ) x0) )  )( and ( and (<= ( - 9 ) x0) (>= ( - 9 ) x0) )  )( and ( and (<= ( - 12 ) x0) (>= ( - 10 ) x0) )  )( and ( and (<= ( - 9 ) x0) (>= ( - 9 ) x0) )  )( and ( and (<= ( - 22 ) x0) (>= ( - 21 ) x0) )  )( and ( and (<= 18 x0) (>= 18 x0) )  )( and ( and (<= ( - 20 ) x0) (>= ( - 18 ) x0) )  )( and ( and (<= ( - 15 ) x0) (>= ( - 13 ) x0) )  )( and ( and (<= ( - 25 ) x0) (>= ( - 24 ) x0) )  )( and ( and (<= ( - 24 ) x0) (>= ( - 23 ) x0) )  )( and ( and (<= 9 x0) (>= 10 x0) )  )( and ( and (<= 18 x0) (>= 19 x0) )  )( and ( and (<= 6 x0) (>= 7 x0) )  )( and ( and (<= ( - 26 ) x0) (>= ( - 25 ) x0) )  )( and ( and (<= ( - 17 ) x0) (>= ( - 15 ) x0) )  )( and ( and (<= ( - 26 ) x0) (>= ( - 26 ) x0) )  )( and ( and (<= 4 x0) (>= 5 x0) )  )( and ( and (<= 3 x0) (>= 4 x0) )  )( and ( and (<= 8 x0) (>= 9 x0) )  )( and ( and (<= ( - 25 ) x0) (>= ( - 25 ) x0) )  )( and ( and (<= ( - 29 ) x0) (>= ( - 29 ) x0) )  )( and ( and (<= ( - 29 ) x0) (>= ( - 29 ) x0) )  )( and ( and (<= ( - 27 ) x0) (>= ( - 27 ) x0) )  )( and ( and (<= 19 x0) (>= 19 x0) )  )( and ( and (<= 5 x0) (>= 6 x0) )  )( and ( and (<= ( - 21 ) x0) (>= ( - 21 ) x0) )  )( and ( and (<= ( - 7 ) x0) (>= ( - 7 ) x0) )  )( and ( and (<= ( - 26 ) x0) (>= ( - 26 ) x0) )  )( and ( and (<= 19 x0) (>= 19 x0) )  )( and ( and (<= ( - 9 ) x0) (>= ( - 9 ) x0) )  )( and ( and (<= 19 x0) (>= 19 x0) )  )( and ( and (<= 16 x0) (>= 17 x0) )  )( and ( and (<= 1 x0) (>= 2 x0) )  )( and ( and (<= 18 x0) (>= 18 x0) )  )( and ( and (<= 15 x0) (>= 16 x0) )  )( and ( and (<= ( - 8 ) x0) (>= ( - 8 ) x0) )  )( and ( and (<= 0 x0) (>= 1 x0) )  )( and ( and (<= ( - 6 ) x0) (>= ( - 6 ) x0) )  )( and ( and (<= 11 x0) (>= 12 x0) )  )( and ( and (<= 14 x0) (>= 15 x0) )  )( and ( and (<= ( - 9 ) x0) (>= ( - 9 ) x0) )  )( and ( and (<= 13 x0) (>= 14 x0) )  )( and ( and (<= ( - 26 ) x0) (>= ( - 26 ) x0) )  )( and ( and (<= ( - 5 ) x0) (>= ( - 5 ) x0) )  )( and ( and (<= 10 x0) (>= 11 x0) )  )( and ( and (<= ( - 10 ) x0) (>= ( - 10 ) x0) )  )( and ( and (<= ( - 5 ) x0) (>= ( - 5 ) x0) )  )( and ( and (<= ( - 4 ) x0) (>= ( - 4 ) x0) )  )( and ( and (<= ( - 24 ) x0) (>= ( - 24 ) x0) )  )( and ( and (<= ( - 6 ) x0) (>= ( - 6 ) x0) )  )( and ( and (<= 19 x0) (>= 19 x0) )  )( and ( and (<= ( - 25 ) x0) (>= ( - 25 ) x0) )  )( and ( and (<= ( - 24 ) x0) (>= ( - 24 ) x0) )  )( and ( and (<= ( - 23 ) x0) (>= ( - 23 ) x0) )  )( and ( and (<= ( - 22 ) x0) (>= ( - 22 ) x0) )  )( and ( and (<= ( - 3 ) x0) (>= ( - 3 ) x0) )  )( and ( and (<= 10 x0) (>= 10 x0) )  )( and ( and (<= 19 x0) (>= 19 x0) )  )( and ( and (<= 9 x0) (>= 9 x0) )  )( and ( and (<= ( - 25 ) x0) (>= ( - 25 ) x0) )  )( and ( and (<= ( - 28 ) x0) (>= ( - 28 ) x0) )  )( and ( and (<= ( - 4 ) x0) (>= ( - 4 ) x0) )  )( and ( and (<= 6 x0) (>= 6 x0) )  )( and ( and (<= 3 x0) (>= 3 x0) )  )( and ( and (<= ( - 27 ) x0) (>= ( - 27 ) x0) )  )( and ( and (<= ( - 26 ) x0) (>= ( - 26 ) x0) )  )( and ( and (<= 4 x0) (>= 4 x0) )  )( and ( and (<= ( - 26 ) x0) (>= ( - 26 ) x0) )  )( and ( and (<= ( - 21 ) x0) (>= ( - 21 ) x0) )  )( and ( and (<= 7 x0) (>= 7 x0) )  )( and ( and (<= ( - 20 ) x0) (>= ( - 20 ) x0) )  )( and ( and (<= 5 x0) (>= 5 x0) )  )( and ( and (<= 9 x0) (>= 9 x0) )  )( and ( and (<= 4 x0) (>= 4 x0) )  )( and ( and (<= 5 x0) (>= 5 x0) )  )( and ( and (<= 8 x0) (>= 8 x0) )  )( and ( and (<= ( - 21 ) x0) (>= ( - 21 ) x0) )  )( and ( and (<= 18 x0) (>= 18 x0) )  )( and ( and (<= 6 x0) (>= 6 x0) )  )( and ( and (<= 15 x0) (>= 15 x0) )  )( and ( and (<= 2 x0) (>= 2 x0) )  )( and ( and (<= 14 x0) (>= 14 x0) )  )( and ( and (<= 16 x0) (>= 16 x0) )  )( and ( and (<= 1 x0) (>= 1 x0) )  )( and ( and (<= 11 x0) (>= 11 x0) )  )( and ( and (<= 14 x0) (>= 14 x0) )  )( and ( and (<= 0 x0) (>= 0 x0) )  )( and ( and (<= 13 x0) (>= 13 x0) )  )( and ( and (<= 1 x0) (>= 1 x0) )  )( and ( and (<= 15 x0) (>= 15 x0) )  )( and ( and (<= 12 x0) (>= 12 x0) )  )( and ( and (<= 11 x0) (>= 11 x0) )  )( and ( and (<= ( - 20 ) x0) (>= ( - 20 ) x0) )  )( and ( and (<= ( - 19 ) x0) (>= ( - 19 ) x0) )  )( and ( and (<= ( - 12 ) x0) (>= ( - 12 ) x0) )  )( and ( and (<= 17 x0) (>= 17 x0) )  )( and ( and (<= ( - 17 ) x0) (>= ( - 17 ) x0) )  )( and ( and (<= 19 x0) (>= 19 x0) )  )( and ( and (<= ( - 15 ) x0) (>= ( - 15 ) x0) )  )( and ( and (<= 10 x0) (>= 10 x0) )  )( and ( and (<= ( - 19 ) x0) (>= ( - 19 ) x0) )  )( and ( and (<= ( - 10 ) x0) (>= ( - 10 ) x0) )  )( and ( and (<= ( - 16 ) x0) (>= ( - 16 ) x0) )  )( and ( and (<= ( - 19 ) x0) (>= ( - 19 ) x0) )  )( and ( and (<= ( - 11 ) x0) (>= ( - 11 ) x0) )  )( and ( and (<= 16 x0) (>= 16 x0) )  )( and ( and (<= ( - 19 ) x0) (>= ( - 19 ) x0) )  )( and ( and (<= ( - 18 ) x0) (>= ( - 18 ) x0) )  )( and ( and (<= ( - 18 ) x0) (>= ( - 18 ) x0) )  )( and ( and (<= 19 x0) (>= 19 x0) )  )( and ( and (<= ( - 16 ) x0) (>= ( - 16 ) x0) )  )( and ( and (<= ( - 13 ) x0) (>= ( - 13 ) x0) )  )( and ( and (<= ( - 12 ) x0) (>= ( - 12 ) x0) )  )( and ( and (<= ( - 14 ) x0) (>= ( - 14 ) x0) )  )( and ( and (<= ( - 11 ) x0) (>= ( - 11 ) x0) )  )( and ( and (<= ( - 11 ) x0) (>= ( - 11 ) x0) )  )( and ( and (<= ( - 20 ) x0) (>= ( - 20 ) x0) )  )( and ( and (<= ( - 15 ) x0) (>= ( - 15 ) x0) )  )( and ( and (<= ( - 14 ) x0) (>= ( - 14 ) x0) )  )( and ( and (<= ( - 13 ) x0) (>= ( - 13 ) x0) )  )( and ( and (<= ( - 14 ) x0) (>= ( - 14 ) x0) )  )( and ( and (<= ( - 14 ) x0) (>= ( - 14 ) x0) )  )( and ( and (<= ( - 11 ) x0) (>= ( - 11 ) x0) )  )( and ( and (<= ( - 15 ) x0) (>= ( - 15 ) x0) )  )( and ( and (<= 18 x0) (>= 18 x0) )  )( and ( and (<= ( - 16 ) x0) (>= ( - 16 ) x0) )  )( and ( and (<= ( - 10 ) x0) (>= ( - 10 ) x0) )  )( and ( and (<= ( - 16 ) x0) (>= ( - 16 ) x0) )  )( and ( and (<= ( - 17 ) x0) (>= ( - 17 ) x0) )  )( and ( and (<= ( - 15 ) x0) (>= ( - 15 ) x0) )  ) ) )
(declare-var x1 Int)
(assume (and (<= ( - 40 ) x1) (<= x1 40) ) )
(synth-fun f1 ((x0 Int) ) Int)
(constraint (<= 0 (+ (* 1 (+ (* 1 ( - 158500.000000)) (* ( f1 x0 ) 32000.000000) (* ( * ( f1 x0 ) ( f1 x0 ) ) ( - 2400.000000)) (* ( * ( f1 x0 ) ( f1 x0 ) ( f1 x0 ) ) 80.000000) (* ( * ( f1 x0 ) ( f1 x0 ) ( f1 x0 ) ( f1 x0 ) ) ( - 1.000000)) )) (* x0 20.000000) (* ( * x0 x0 ) ( - 1.000000)) ) ) )
(constraint (<= 0 (+ (* 1 (+ (* 1 ( - 278641.000000)) (* ( f1 x0 ) 48668.000000) (* ( * ( f1 x0 ) ( f1 x0 ) ) ( - 3174.000000)) (* ( * ( f1 x0 ) ( f1 x0 ) ( f1 x0 ) ) 92.000000) (* ( * ( f1 x0 ) ( f1 x0 ) ( f1 x0 ) ( f1 x0 ) ) ( - 1.000000)) )) (* x0 ( - 40.000000)) (* ( * x0 x0 ) ( - 1.000000)) ) ) )
(constraint (and (<= ( - 40 ) ( f1 x0 ) ) (<= ( f1 x0 ) 40) ) ) 
(constraint (=> (and (<= 0 (+ (* 1 (+ (* 1 ( - 158500.000000)) (* x1 32000.000000) (* ( * x1 x1 ) ( - 2400.000000)) (* ( * x1 x1 x1 ) 80.000000) (* ( * x1 x1 x1 x1 ) ( - 1.000000)) )) (* x0 20.000000) (* ( * x0 x0 ) ( - 1.000000)) ) ) (<= 0 (+ (* 1 (+ (* 1 ( - 278641.000000)) (* x1 48668.000000) (* ( * x1 x1 ) ( - 3174.000000)) (* ( * x1 x1 x1 ) 92.000000) (* ( * x1 x1 x1 x1 ) ( - 1.000000)) )) (* x0 ( - 40.000000)) (* ( * x0 x0 ) ( - 1.000000)) ) ) ) (or (<= 1 0) (and (<= x1 ( f1 x0 ) ) )
) ) )
(check-synth)
